apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: java-pipeline
  namespace: java-project
spec:
  params:
    - default: quay.io/narendraprasadn/java-cicd
      description: The fully qualified image name e.g example.com/tekton-tutorial/greeter
      name: IMAGE_NAME
      type: string
    - default: springboot
      description: >-
        The application profile to use for building the application. In this
        example it should be either:
          * quarkus
          * springboot
      name: APP_PROFILE
      type: string
    - default: newpipe
      description: The Knative Service name
      name: APP_NAME
      type: string
    - default: ''
      description: The GitHub Repo of the Java Application
      name: GITHUB_REPO_URL
      type: string
    - default: ''
      description: The GitHub revision to use
      name: GITHUB_REPO_REVISION
      type: string
  tasks:
    - name: clone-sources
      params:
        - name: url
          value: $(params.GITHUB_REPO_URL)
        - name: revision
          value: $(params.GITHUB_REPO_REVISION)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: pvc
    - name: sonar-maven
      params:
        - name: GOALS
          value:
            - 'sonar:sonar'
      runAfter:
        - clone-sources
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: pvc
        - name: maven-settings
          workspace: pvc
    - name: maven-build
      params:
        - name: GOALS
          value:
            - 'clean'
            - 'install'
            - 'package'
      runAfter:
        - sonar-maven
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: pvc
        - name: maven-settings
          workspace: pvc
    - name: build-image
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: $(params.IMAGE_NAME)
      runAfter:
        - maven-build
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: pvc
    - name: apply-manifests
      workspaces:
        - name: source
          workspace: pvc
      params:
        - name: manifest_dir
          value: k8s
      runAfter:
        - build-image
      taskRef:
        kind: Task
        name: apply-manifests
  workspaces:
    - name: pvc
  resources: []
